import { CompanyService } from './company.service';
import { CreateCompanyDto } from './dto/create-company.dto';
import { UpdateCompanyDto } from './dto/update-company.dto';
export declare class CompanyController {
    private readonly companyService;
    constructor(companyService: CompanyService);
    create(createCompanyDto: CreateCompanyDto): import("@prisma/client").Prisma.Prisma__companyClient<{
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    findAll(): import("@prisma/client").Prisma.PrismaPromise<{
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }[]>;
    findOne(id: string): import("@prisma/client").Prisma.Prisma__companyClient<{
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    findOneContact(id: string): import("@prisma/client").Prisma.Prisma__companyClient<{
        contacts: {
            createdAt: Date;
            updatedAt: Date;
            id: number;
            companyId: number;
            value: string;
            is_primary: boolean;
            cityCode: string;
        }[];
    } & {
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    findOneUsers(id: string): import("@prisma/client").Prisma.Prisma__companyClient<{
        persons: {
            id: number;
            name: string;
            username: string;
            passwordHash: string;
            familyName: string;
            currentCompanyId: number;
            role: string;
            phone: string;
        }[];
    } & {
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    findOneByUser(req: any): import("@prisma/client").Prisma.Prisma__companyClient<{
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    updateOneByUser(req: any, updateCompanyDto: UpdateCompanyDto): import("@prisma/client").Prisma.PrismaPromise<import("@prisma/client").Prisma.BatchPayload>;
    update(id: string, updateCompanyDto: UpdateCompanyDto): import("@prisma/client").Prisma.Prisma__companyClient<{
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    remove(id: string): import("@prisma/client").Prisma.Prisma__companyClient<{
        nameFa: string;
        nationalId: string | null;
        img: string | null;
        nameEn: string | null;
        country: string | null;
        mainAddress: string | null;
        website: string | null;
        province: string | null;
        postalCode: string | null;
        city: string | null;
        registrationData: Date | null;
        registrationNumber: number | null;
        email: string | null;
        createdAt: Date;
        updatedAt: Date;
        id: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
}
